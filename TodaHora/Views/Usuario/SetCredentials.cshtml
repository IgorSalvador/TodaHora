@model TodaHora.Models.Usuario
@{
    ViewBag.Title = "Defina suas credênciais";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="wrapper_default">

    <h1>Definir seu acesso</h1>

    <form action="@Url.Action("SetCredentials")" method="post" class="SetCredentialsForm">
        <div class="div_group_form_user">
            @Html.HiddenFor(m => m.Usuario_Id)
            <div>
                @Html.LabelFor(m => m.Username, "Nome de usuário", new {@class = "form_label_custom" })
                @Html.TextBoxFor(m => m.Username, new { @required = "required", @class= "form-control", @title = "O username deve conter mais de 8 caracteres" })
            </div>

            <div>
                @Html.LabelFor(m => m.Senha, "Senha", new { @class = "form_label_custom" })
                @Html.TextBoxFor(m => m.Senha, new { @type="password", @pattern = "(?=.*'\'d)(?=.*[a-z])(?=.*[A-Z]).{8,}", @title = "A senha deve conter uma letra maiuscula, uma minuscula, um caracter especial e mais de oito caracteres.", @required = "required", @class = "form-control" })
            </div>

            <div>
                <label class="form_label_custom">Confirmar senha</label>
                <input type="password" name="ConfirmarSenha" id="ConfirmarSenha" class="form-control" required/>
            </div>
        </div>

        <div class="validation_credentials">
            <h5>A senha deve cumprir os seguintes requisitos!</h5>
            <p id="letter" class="invalid">Um carater <strong>minusculo</strong></p>
            <p id="capital" class="invalid">Um caracter <strong>maiusculo</strong></p>
            <p id="number" class="invalid">Um caracter <strong>númeral</strong></p>
            <p id="length" class="invalid">Minímo de <strong>8 caracteres</strong></p>
            <p id="comparation" class="invalid">Senhas <strong>correspondentes</strong></p>
        </div>

        <div class="SetCredentialsButtons">
            <button id="btn_save" class="btn btn-success" disabled>Salvar</button>
            <a id="btn_cancel" class="btn btn-dark">Cancelar</a>
        </div>
    </form>
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            $("#btn_cancel").on("click", function () {
                let validation = window.confirm("Deseja realmente cancelar?");

                if (validation) {
                    window.location.href = "@Url.Action("Index", "Login")";
                }
            });
        });
    </script>
    <script>
        var myInput = document.getElementById("Senha");
        var myInputValidation = document.getElementById("ConfirmarSenha");
        var letter = document.getElementById("letter");
        var capital = document.getElementById("capital");
        var number = document.getElementById("number");
        var length = document.getElementById("length");
        var comparation = document.getElementById("comparation");



        // When the user starts to type something inside the password field
        myInput.onkeyup = function () {
            // Validate lowercase letters
            var lowerCaseLetters = /[a-z]/g;
            if (myInput.value.match(lowerCaseLetters)) {
                letter.classList.remove("invalid");
                letter.classList.add("valid");
            } else {
                letter.classList.remove("valid");
                letter.classList.add("invalid");
            }

            // Validate capital letters
            var upperCaseLetters = /[A-Z]/g;
            if (myInput.value.match(upperCaseLetters)) {
                capital.classList.remove("invalid");
                capital.classList.add("valid");
            } else {
                capital.classList.remove("valid");
                capital.classList.add("invalid");
            }

            // Validate numbers
            var numbers = /[0-9]/g;
            if (myInput.value.match(numbers)) {
                number.classList.remove("invalid");
                number.classList.add("valid");
            } else {
                number.classList.remove("valid");
                number.classList.add("invalid");
            }

            // Validate length
            if (myInput.value.length >= 8) {
                length.classList.remove("invalid");
                length.classList.add("valid");
            } else {
                length.classList.remove("valid");
                length.classList.add("invalid");
            }

            
        }

        myInputValidation.onkeyup = function(){
            if (myInput.value == myInputValidation.value) {
                comparation.classList.remove("invalid");
                comparation.classList.add("valid");
                document.getElementById("btn_save").disabled = false;
            }
            else {
                document.getElementById("btn_save").disabled = true;
            }
        }
    </script>
}